package com.ibm.garage.warehouse.controllers;


import com.ibm.garage.warehouse.models.Item;
import com.ibm.garage.warehouse.repositories.ItemRepository;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path="/item") // This means URL's start with /item (after Application path)
public class ItemController {
  @Autowired // This means to get the bean called itemRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private ItemRepository itemRepository;

  @PostMapping(path="/add") // Map ONLY POST Requests
  public @ResponseBody String addNewItem (
      @RequestParam String name, 
      @RequestParam String description, 
      @RequestParam String category, 
      @RequestParam String productType) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    Item n = new Item();
    n.setName(name);
    n.setDescription(description);
    n.setCategory(category);
    n.setProductType(productType);
    itemRepository.save(n);
    return "Saved";
  }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<Item> getAllItems() {
    // This returns a JSON or XML with the items
    return itemRepository.findAll();
  }
}